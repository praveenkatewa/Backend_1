/*


1 what is express
so express is a javascript framework that helps in creating apis and handle asynchronous javascript request and response

2.what is javascript framework
any coding language whose parent is javascript is called as framework
ek aisa coding language jo javascript ke upar likhi gai hai(nodejs ke upar)
node ek set hai to express uska subset hai

3.what is apis
so is application programming interface
it is a set of rules that allow two software programs to communicate with each other.
frontend and backend

matlab sir database mai siri files stored hai ab front end wale bhaiya ko infromation chahiye jo wo apne ui mai show kar sake ab unko wo data jis form mai bhejenge wo format json format hai
json format mai hi maine data ko database ke andar store kiya hai
lekin database se wo data front end tak le jane wala kaam express karegi kyuki express url/ api banane ka kam karti hai
api actual mai url hi hai jo mutiple routes and endpoints se milkar bani hai

IT engineer
1. routes
class1-12/arts/ba/llb
class1-12/arts/ba/ma
class1-12/science/btech
class1-12/science/btech/mtech
class1-12/science/btech/mba
class1-12/science/bca/mca/mba
class1-12/science/bsc
class1-12/commerce/bba/mba

2.jab app jis route mai the us time jo ghantaye apke saath ho rahi thi wo actually mai controller hai.

3.co-cirrcular activites perform

middlewares.
login mai jo authetication and authorisation ka kaam hai wo middlewares dekhte hai , kisi data ko kis aur datatype mai convert karne ka kaam bhi middlewares dekhte hai, agar data front end se backend ya backend se front end ja raha hai to uss wakt data across the origin ja raha hai to time pe cross origin resource share ho raha hai to yeh middlewares ki responsibility hai ki data protected rahe to us time cors nam ki policy wala apne ap mai ek middleware hoga.

4.jab data across the origin travel karege to yeh hume nahi pata ki wo kitna time lena wala hai soo in that case baki ka javascript program us data traveling ke liye wait na karein isiliye expressjs pura pura asynchronous javascript par based kiya gaya hai. iske liye javascript ka async await callback aur promise tino mai se koi ek use hoga

5. request is the ask done by frontend side
jab front end ko data chahiye hoti hai tab wo backend se data ki demand karta hai backend ki application (app) usko listen karega kisi ek port par (platform par jispar backend ka server launch kiya gaya hai ).


express
1. server
2. routes
3. controller
4. middleware

database :
  1.database ke saath connection and configuration  
  2.ab database collection,schema, documents ===models
  3.database ke saath data store and fetch hone wali  

connection and configuration

models ke andar schema banai jati hai
schema is the visual representation of single object stored inside database
user=== id, email,password, phonenumber ===fields of infromations
ka datatype kya hai aur yeh format mai stored hai iski design hi schema design kaha jata hai
 
5. config
6. models

*/***********************************************************
**************************************************************

server kya hai?

server ek system hai jo hume response provide karti hai on our any request.

response==ans
request==question

system==>operating system hai

computer ek device hai
laptop ek device hai
inn devices par par os installed hai linux
terminal jo milega wo actually mai system ke saath communicate karwane wala scene hai

terminal ===CLI
I === interface
jaha se ap interaction kar sakte ho

cl===command line

wahi par GUI graphic user interface

webapplication === System
1.front end  === GUI
2.backend    === CLI
3.database   === data(memory harddisk)

agar app kal koi application banate ho to wo webapplication ke saath
interact karne ka kya kya medium
1. front end
2. using backend


what is differece between server and system?
server bhi ek system ek aaisa system jo humesha responsible ho apke request par response dene ke liye at any temp, condition ,physical atmosphere aur usme internet access ho to wo server ban jati hai.

to ek active system hi server hai

what is HTTPS or http ?
hyper text transfer protocol secure
protocol set of rules.
data pass hoga across the origin

kisi user ne agar server se request ki hai to us par server ka interaction apne ap mai kuch status codes ki dwaya kiya jata hai

200 === successful response
300 === re-request
400 === bad request from user side(client side front end side )
500 === server side error backend(config, routes)

json format mai request kiya hai and response json format mai diya jata hai .

application programming interface(API) ke through yeh request and response handle kiya jata hai

request listen ==>server
response bhejna ka kaam ==>server
request jaha par li jayegi ==>client side (browser ya wo tool jo request le sakti hai eg thunderclient, postman)
response le lane ka jane==> API
request le ane ka kaam==>API

data packet ke andar dhal kar json ko bhej sakte hai agar wo packet format xml hui to use SOAP khete hai
agar wahi stateless format hoti hai to use REST api bolte hai.
SOAP stands for Simple Object Access Protocol
Representational State Transfer (REST) is an architectural style that defines a set of constraints to be used for creating web services. REST API is a way of accessing web services in a simple and flexible way without having any processing.

 Uniform Interface, Client-Server, Stateless, Cacheable, Layered System, Code on Demand.

 SOAP uses only XML for exchanging information in its message format whereas REST is not restricted to XML and its the choice of implementer which Media-Type to use like XML, JSON, Plain-text. Moreover, REST can use SOAP protocol but SOAP cannot use REST.

 On behalf of services interfaces to business logic, SOAP uses @WebService whereas REST instead of using interfaces uses URI like @Path.


 https://www.geeksforgeeks.org/difference-between-rest-api-and-soap-api/
 https://www.geeksforgeeks.org/introduction-of-server/
 https://www.geeksforgeeks.org/what-are-http-status-codes/
 https://www.geeksforgeeks.org/http-full-form/?ref=lbp

******************************************************************************************************



